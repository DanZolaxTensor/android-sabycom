plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation('com.facebook.fresco:fresco:2.6.0') {
        exclude group: 'com.facebook.soloader', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'nativeimagefilters'
        exclude group: 'com.facebook.fresco', module: 'nativeimagetranscoder'
        exclude group: 'com.facebook.fresco', module: 'memory-type-native'
        exclude group: 'com.facebook.fresco', module: 'imagepipeline-native'
    }

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def publishingLogin = System.getenv("SONATYPE_LOGIN")
def publishingPassword = System.getenv("SONATYPE_PASSWORD")

def publishingGroupId = 'ru.tensor.sabycom'
def publishingArtifactId = 'sabycom'
def publishingVersionCode = System.getenv("VERSION") ?: "21.6219"


afterEvaluate {
    publishing {
        publications {

            release(MavenPublication) {
                from components.release

                groupId = publishingGroupId
                artifactId = publishingArtifactId
                version = publishingVersionCode

                repositories {
                    maven {
                        url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                        credentials {
                            username publishingLogin
                            password publishingPassword
                        }
                    }
                }

            }
            debug(MavenPublication) {
                from components.debug

                groupId = publishingGroupId
                artifactId = publishingArtifactId
                version = publishingVersionCode
            }
        }
    }
    signing {
		def signingKeyId = findProperty("signingKeyId")
		println(signingKeyId)
		def signingKey = findProperty("signingKey")
		println(signingKey)
		def signingPassword = findProperty("signingPassword")
		println(signingPassword)
		useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign publishing.publications.release
    }
}